// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Define User model
model User {
  id                Int      @id @default(autoincrement())
  username          String?  @unique
  password          String?
  telegramId        String?  @unique // Telegram's unique user ID
  telegramUsername  String?  @unique // @username
  telegramFirstName String?
  telegramLastName  String?
  telegramPhotoUrl  String?
  verificationCode  String?  // For account linking process
  isVerified        Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  isAdmin           Boolean  @default(false)
  bids              Bid[]
}

// Event model - represents the upcoming charity event
model Event {
  id           Int      @id @default(autoincrement())
  name         String
  description  String?
  location     String
  eventDate    DateTime
  imageUrl     String?
  games        Game[]
  isActive     Boolean  @default(true)
}

// Game model - represents a tabletop game session available at the event
model Game {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  imageUrl    String?
  gameMaster  String?
  totalSeats  Int      // Total number of seats available
  startingBid Float    // Minimum bid amount
  eventId     Int
  event       Event    @relation(fields: [eventId], references: [id])
  bids        Bid[]
}

// Bid model - represents a user's bid for a game
model Bid {
  id           Int       @id @default(autoincrement())
  telegramName String?
  amount       Float
  gameId       Int
  game         Game      @relation(fields: [gameId], references: [id])
  createdAt    DateTime  @default(now())
  isWinning    Boolean   @default(false) // Flag to mark winning bids
  userId       Int?
  user         User?     @relation(fields: [userId], references: [id])
  notifiedAt   DateTime?
}
